{"version":3,"sources":["index.js"],"names":["key","listadoUrls","Card","movie","move","onmouseover","onmouseout","index","punta","img","onClick","className","onMouseOver","onMouseOut","id","name","src","alt","hidden","ListCard","tipo","useState","listMovies","setListMovies","listMoviesImg","setListMoviesImg","listMoviesOnOver","setListMoviesOnOver","useEffect","url","a","async","fetch","then","res","json","listMoviesAux","concat","results","map","i","backdrop_path","Array","length","fill","catch","err","console","log","handleOnOver","event","cardOver","currentTarget","moveListCard","push","handleOnOut","listado","ListGroup","e","News","pelicula","trailerKey","generos","undefined","genres","genero","original_title","runtime","release_date","overview","frameborder","allow","title","Main","props","state","idPelicula","getAttribute","this","setState","getData","bind","React","Component","Navbar","href","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f4419ba.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst key = 'f13b35a7449050301ba5dbef9580d820';\nconst listadoUrls = ['https://api.themoviedb.org/3/movie/top_rated?api_key='+key+'&language=en-US&page=1',\n                'https://api.themoviedb.org/3/movie/popular?api_key='+key+'&language=en-US&page=1']\nconst urlImg = 'https://image.tmdb.org/t/p/w300/'\nconst urlVideo = 'https://api.themoviedb.org/3/movie/'\nconst urlPelicula = 'https://api.themoviedb.org/3/movie/'\n\nconst Card = ({movie,move,onmouseover,onmouseout,index,punta,img,onClick}) => {\n    return(\n        <div className={'card '+move+' '+punta} onClick={onClick} onMouseOver={onmouseover} onMouseOut={onmouseout} id={index} name={movie} >\n            <img className='imgCard' src={img} alt='portada'></img>\n            <div className='infoCard' hidden>{movie}</div>\n        </div>\n    );\n}\n\nconst ListCard = ({tipo,index,onClick}) => {\n\n    const [listMovies, setListMovies] = useState([]);\n    const [listMoviesImg, setListMoviesImg] = useState([]);\n    const [listMoviesOnOver, setListMoviesOnOver] = useState([]);\n    \n    useEffect(() => {\n        data(listadoUrls[index]);\n    },[index]);\n\n    async function data(url,index){\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                let listMoviesAux = listMovies.concat(res.results.map(movie=>movie.id));\n                setListMovies(listMoviesAux);\n                setListMoviesImg(listMoviesImg.concat(res.results.map((movie,i)=>urlImg+res.results[i].backdrop_path)));\n                setListMoviesOnOver(Array(listMoviesAux.length).fill('none'))\n            })\n            .catch((err) => console.log(err));\n    }\n\n    const handleOnOver = event => {\n        let cardOver = event.currentTarget.id;\n        let moveListCard = [];\n        \n        for(var i = 0; i<20;i++){\n            \n            if(i<cardOver){\n                moveListCard.push('left');\n            }else if(i>cardOver){\n                moveListCard.push('right')\n            }else if(i===cardOver)  {\n                moveListCard.push('center');\n            }else{\n                moveListCard.push('none')\n            }\n        }\n\n        setListMoviesOnOver(moveListCard)\n    }\n\n    const handleOnOut = event => {\n        setListMoviesOnOver(listMoviesOnOver.map(()=>'none'))\n    }\n\n    let listado = listMovies.map((movie,i) =>{\n\n                        let punta = '';\n                        if(i===0){\n                            punta = 'start'\n                        } else if(i===listMovies.length-1){\n                            punta = 'end'\n                        }\n\n                        return(<Card movie={movie} img={listMoviesImg[i]} key={i} index={i} \n                        move={listMoviesOnOver[i]} \n                        onmouseover={handleOnOver}\n                        onmouseout={handleOnOut} punta={punta} onClick={onClick}>\n                        </Card>)\n                        });\n\n    return (<section className='groupCard'>\n                <h2>{tipo}</h2>\n                <div className='listCard'>\n                    {listado}\n                </div>     \n            </section>)\n}\n\nconst ListGroup = ({onClick}) => {\n    const listados = ['Top Rated','Popular'];\n    return listados.map((e,i) => <ListCard tipo={e} key={i} index={i} onClick={onClick}></ListCard>)\n}\n\nconst News = ({pelicula,trailerKey}) => {\n\n    let generos = [];\n    \n    if(pelicula.genres !== undefined){\n        generos = pelicula.genres.map((genero,index) => <div key={index} className='genero'>{genero.name}</div>)\n    }\n\n    return  (<section className='portada'>\n                <div className='infoPeli'>\n                    <h1 className='nombrePortada'>{pelicula.original_title}</h1>\n                    <div className='duracion'>{pelicula.runtime +' minutes'}</div>\n                    <div className='fecha'>{pelicula.release_date}</div>\n                    <div className='overview'>{pelicula.overview}</div>\n                    <div className='generos'>{generos}</div>   \n                </div>\n                <div className='trailerPeli'>\n                    <iframe src={'https://www.youtube.com/embed/'+trailerKey\n                            +'?autoplay=1&controls=0&disablekb=1&fs=0&loop=0&modestbranding=1&rel=0&showinfo=0&mute=1&autohide=1'} \n                        frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" id='iframe_youtube' title='trailer'></iframe>\n                    <div className='fader'></div>\n                </div>\n            </section>)\n}\n\n\nclass Main extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            idPelicula: '',\n            pelicula: {},\n            trailerKey:''\n        };\n    }\n\n    onClick(event){\n        let id = event.currentTarget.getAttribute('name');\n        this.setState({idPelicula:id});\n        this.getData(id)\n    }\n\n    getData(id){\n        fetch(urlPelicula+id+'?api_key='+key+'&language=en-US')\n            .then(res=>res.json())\n            .then(res=>this.setState({pelicula:res}))\n            .catch(err=>console.log(err));\n\n        fetch(urlVideo+id+'/videos?api_key='+key+'&language=en-US')\n            .then(res=>res.json())\n            .then(res=>this.setState({trailerKey:res.results[0].key}))\n            .catch(err=>console.log(err));\n    }\n    \n    componentWillMount(){\n        this.getData(120);\n    }\n\n    render(){\n        return (<main>\n        <News pelicula={this.state.pelicula} trailerKey={this.state.trailerKey}></News>\n        <ListGroup onClick={this.onClick.bind(this)}></ListGroup>\n    </main>)}\n}\n\nconst Navbar = (props) => {\n    return (<nav className='navbar'>\n                <ul>\n                    <li><a href=\"#0\">Inicio</a></li>\n                    <li><a href=\"#1\">Sobre nosotros</a></li>\n                    <li><a href=\"#2\">Contacto</a></li>\n                </ul>\n            </nav>)\n}\n\nconst Header = (props) => {\n    return(<header>\n                <Navbar></Navbar>\n            </header>)\n}\n\nconst App = (props) => {\n    return(\n        <div className='root_2'>\n            <Header></Header>\n            <Main></Main>\n        </div>\n    )\n}\n\n\nReactDOM.render(<App></App>,document.getElementById('root'))"],"sourceRoot":""}